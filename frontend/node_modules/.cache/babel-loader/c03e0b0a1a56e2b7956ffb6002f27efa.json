{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/Cluster-Research-new/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _slicedToArray from\"/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/Cluster-Research-new/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"../App.css\";import{useState,useEffect}from\"react\";import Button from\"react-bootstrap/Button\";import ToggleButton from'react-bootstrap/ToggleButton';import Form from\"react-bootstrap/Form\";import axios from\"axios\";import{drawProjection,clearSVG,changeOpacity,changeDotSize,toggleDotDisplay,autocheckPoints}from\"../d3-rendering/projectionManipulationFunctions.js\";import Tooltip from'@mui/material/Tooltip';import Slider from\"@mui/material/Slider\";import CircularProgress from\"@mui/material/CircularProgress\";import{InfoTooltip}from\"./InfoTooltip.js\";import{library}from\"@fortawesome/fontawesome-svg-core\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faCheckSquare,faSquare}from\"@fortawesome/free-solid-svg-icons\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";library.add(faCheckSquare,faSquare);var localDevURL=\"http://127.0.0.1:8000/\";var LoadDataCircle=function LoadDataCircle(_ref){var loadingData=_ref.loadingData;if(!loadingData){return/*#__PURE__*/_jsx(\"div\",{});}else{return/*#__PURE__*/_jsx(CircularProgress,{});}};var ReductionOptions=function ReductionOptions(_ref2){var reductionMethod=_ref2.reductionMethod,perplexity=_ref2.perplexity,perplexityChanger=_ref2.perplexityChanger;// Handle perplexity changes\nvar handlePerplexityChange=function handlePerplexityChange(event,newPerplexity){if(newPerplexity!==perplexity){perplexityChanger(newPerplexity);}};if(reductionMethod===\"TSNE\"){return/*#__PURE__*/_jsxs(\"div\",{className:\"sliderBlock\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Perlexity\"}),/*#__PURE__*/_jsx(Slider,{size:\"small\",\"aria-label\":\"perplexity\",value:perplexity,onChange:handlePerplexityChange,min:0,max:100}),/*#__PURE__*/_jsx(\"p\",{className:\"paramValue\",children:perplexity})]});}else if(reductionMethod===\"UMAP\"){return/*#__PURE__*/_jsx(\"div\",{});}else{return/*#__PURE__*/_jsx(\"div\",{});}};function myFunction(){var x=document.getElementById(\"myDIV\");if(x.style.display===\"none\"){x.style.display=\"block\";}else{x.style.display=\"none\";}}// Item in the category key\nvar KeyItem=function KeyItem(_ref3){var props=_ref3.props;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),checked=_useState2[0],setChecked=_useState2[1];var _useState3=useState(props.label),_useState4=_slicedToArray(_useState3,2),checkedlabel=_useState4[0],setCheckedLabel=_useState4[1];var handleClick=function handleClick(){setChecked(!checked);toggleDotDisplay(!checked,props.label);autocheckPoints(props.label);};return/*#__PURE__*/_jsxs(\"div\",{className:\"key-item\",onClick:handleClick,spin:true,children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:checked?\"check-square\":\"square\",color:checked?props.color:\"#FAFAFA\"}),/*#__PURE__*/_jsx(\"p\",{children:props.label+\" : \"+props.keywords})]});};// Data upload + control panel\nexport var LeftPanel=function LeftPanel(_ref4){var width=_ref4.width,height=_ref4.height;var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),rawFile=_useState6[0],setRawFile=_useState6[1];// File that hasn't been projected yet\nvar _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),plottedData=_useState8[0],setPlottedData=_useState8[1];// Holds data that's currently plotted\nvar _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),projectedFileData=_useState10[0],setProjectedFileData=_useState10[1];// Holds previously projected data that's being uploaded\nvar _useState11=useState(50),_useState12=_slicedToArray(_useState11,2),opacity=_useState12[0],setOpacity=_useState12[1];var _useState13=useState(2),_useState14=_slicedToArray(_useState13,2),dotSize=_useState14[0],setDotSize=_useState14[1];var _useState15=useState(1),_useState16=_slicedToArray(_useState15,2),clusterThresholdDist=_useState16[0],setclusterThresholdDist=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),clusterMode=_useState18[0],setClusterMode=_useState18[1];var _useState19=useState(\"none\"),_useState20=_slicedToArray(_useState19,2),reductionMethod=_useState20[0],setReductionMethod=_useState20[1];var _useState21=useState(50),_useState22=_slicedToArray(_useState21,2),perplexity=_useState22[0],setPerplexity=_useState22[1];var _useState23=useState(false),_useState24=_slicedToArray(_useState23,2),loadingData=_useState24[0],setLoadingData=_useState24[1];var _useState25=useState(\"\"),_useState26=_slicedToArray(_useState25,2),csvOutput=_useState26[0],setCsvOutput=_useState26[1];var _useState27=useState([/*#__PURE__*/_jsx(\"option\",{value:\"select-a-column\",children:\"select a column to color dots by\"},\"select-a-column\")]),_useState28=_slicedToArray(_useState27,2),csvColumns=_useState28[0],setCsvColumns=_useState28[1];//reset\nvar _useState29=useState({}),_useState30=_slicedToArray(_useState29,2),colorMap=_useState30[0],setColorMap=_useState30[1];var _useState31=useState(\"none\"),_useState32=_slicedToArray(_useState31,2),selectedCol=_useState32[0],setSelectedCol=_useState32[1];function renderKey(){if(colorMap.length>0){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Selection\"})}),colorMap.map(function(info){return/*#__PURE__*/_jsx(KeyItem,{props:{label:info[0],color:info[1][0],keywords:info[1][1]}});})]});}}// Help explanations\nvar uploadExplanation=\"Upload a CSV with embeddings and metadata to project\";var previousProjectionExplanation=\"Here, you can upload JSON files saved using the 'bookmark projection' button below\";// File reader\nvar fileReader=new FileReader();// Set projected file on projected file upload\nvar handleProjectedFileChange=function handleProjectedFileChange(e){fileReader.onload=function(event){setProjectedFileData(JSON.parse(event.target.result));};fileReader.readAsText(e.target.files[0]);};var toggleDiv=function toggleDiv(e,id){var x=document.getElementById(id);if(x.style.display===\"none\"){x.style.display=\"block\";}else{x.style.display=\"none\";}};// For plotting previously projected data\nvar handleFilePlot=function handleFilePlot(e){// Clears svg and plots new data if there is new data\nif(projectedFileData.length>0){clearSVG();setPlottedData(projectedFileData);var newColorMap=drawProjection(width,height,projectedFileData);setColorMap(Object.entries(newColorMap));var req={data:JSON.stringify(projectedFileData)};console.log(projectedFileData);axios//sending data to the backend\n.post(localDevURL+\"quickload\",req).then(function(response){console.log('Done');}).catch(function(error){console.log(error);setLoadingData(false);});setProjectedFileData([]);}};// Set raw file on raw file upload\nvar handleRawFileChange=function handleRawFileChange(e){setRawFile(e.target.files[0]);// Uses first row from CSV to create dropdown of column names\nvar rows;fileReader.onload=function(event){setCsvOutput(event.target.result);console.log(event.target.result);rows=event.target.result.split(\"\\n\");var colNames=rows[0].split(\",\");var colItems=[/*#__PURE__*/_jsx(\"option\",{value:\"select-a-column\",children:\"select a column to color dots by\"},\"select-a-column\"),/*#__PURE__*/_jsx(\"option\",{value:\"none\",children:\"none\"},\"none\")];var _iterator=_createForOfIteratorHelper(colNames),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var colName=_step.value;colItems.push(/*#__PURE__*/_jsx(\"option\",{value:colName,children:colName},colName));}}catch(err){_iterator.e(err);}finally{_iterator.f();}setCsvColumns(colItems);setSelectedCol(\"none\");};fileReader.readAsText(e.target.files[0]);};var handleColChange=function handleColChange(e){setSelectedCol(e.target.value);};var handleReductionMethodChange=function handleReductionMethodChange(e){setReductionMethod(e.target.value);};//cost handleClusterThresholdChange\n// Handle file projection\nvar handleFileProject=function handleFileProject(e){e.preventDefault();// Submits post request if there is not a request already being processed\nif(rawFile&&!loadingData&&reductionMethod!==\"none\"){setLoadingData(true);var req={data:csvOutput,reductionMethod:reductionMethod,selectedCol:selectedCol};// Constructing request based on reduction Method\nif(reductionMethod===\"TSNE\"){req.perplexity=perplexity;}axios//sending data to the backend\n.post(localDevURL+\"upload-data\",req).then(function(response){//console.log(\"SUCCESS\", response.data.data);\nvar dataToPlot=response.data.data;clearSVG();setPlottedData(dataToPlot);var newColorMap=drawProjection(width,height,dataToPlot);setColorMap(Object.entries(newColorMap));setLoadingData(false);//add something to send the cluster size to backend\n}).catch(function(error){console.log(error);setLoadingData(false);});}else if(!rawFile){alert(\"please upload a file\");}else if(reductionMethod===\"none\"){alert(\"please select a reduction method!\");return;}};// Handles save of currently projected data\nvar handleProjectionSave=function handleProjectionSave(e){var jsonString=\"data:text/json;chatset=utf-8,\".concat(encodeURIComponent(JSON.stringify(plottedData)));// console.log(plottedData);\nvar link=document.createElement(\"a\");link.href=jsonString;link.download=\"data.json\";link.click();};// SLIDERS\n// Handle opacity changes\nvar handleOpacityChange=function handleOpacityChange(event,newOpacity){if(newOpacity!==opacity){setOpacity(newOpacity);}};useEffect(function(){//console.log(\"changing opacity\", opacity / 100);\nchangeOpacity(opacity/100);},[opacity]);// Handle dot size changes\nvar handleDotSizeChange=function handleDotSizeChange(event,newSize){if(newSize!==dotSize){setDotSize(newSize);}};useEffect(function(){//console.log(\"changing dot size\", dotSize);\nchangeDotSize(dotSize);},[dotSize]);// Handle cluster threshold distance changes\n// const handleClusterThresholdDist = (event, newThreshold) => {\n// if (newThreshold !== clusterThresholdDist) {\n//   setclusterThresholdDist(newThreshold)\n// }\n// }\nvar handleClusterThresholdDist=function handleClusterThresholdDist(event,newThreshold){if(newThreshold!==clusterThresholdDist){setclusterThresholdDist(newThreshold);//console.log(clusterThresholdDist)\n}// Submits post request if there is not a request already being processed\n// if (clusterMode) {\nvar req={clusterThresholdDist:clusterThresholdDist};axios//sending data to the backend\n.post(localDevURL+\"auto-cluster\",req).then(function(response){//console.log(\"SUCCESS affected new cluster distance\");\nvar dataToPlot=response.data.data;clearSVG();setPlottedData(dataToPlot);var newColorMap=drawProjection(width,height,dataToPlot);setColorMap(Object.entries(newColorMap));console.log(Object.entries(newColorMap));setLoadingData(false);//add something to send the cluster size to backend\n}).catch(function(error){console.log(error);setLoadingData(false);});// };\n};// useEffect(() => {\n//   console.log(\"changing cluster threshold dist\", clusterThresholdDist);\n//   let req = {\n//     clusterThresholdDist: clusterThresholdDist\n//   };\n//   axios\n//     .post(localDevURL + \"turn-on-cluster-mode\", req)\n//     .then((response) => {\n//       console.log(\"SUCCESS affected new cluster distance\");\n//       let dataToPlot = response.data.data;\n//       clearSVG();\n//       setPlottedData(dataToPlot);\n//       let newColorMap = drawProjection(width, height, dataToPlot);\n//       setColorMap(Object.entries(newColorMap));\n//     })\n//     .catch((error) => {\n//       console.log(error);\n//     });\n// }, [clusterThresholdDist])\n// Draw graph ONCE when the component mounts\nuseEffect(function(){console.log(\"running effect\");axios.get(localDevURL+\"get-default-data\").then(function(response){var dataToPlot=response.data.data;setPlottedData(dataToPlot);var newColorMap=drawProjection(width,height,dataToPlot);setColorMap(Object.entries(newColorMap));}).catch(function(error){console.log(error);});},[height,width]);return/*#__PURE__*/_jsxs(\"div\",{className:\"left panel\",children:[/*#__PURE__*/_jsx(Tooltip,{title:uploadExplanation,arrow:true,children:/*#__PURE__*/_jsx(Button,{id:\"uploadShowButton\",variant:\"outline-primary\",onClick:function onClick(e){toggleDiv(e,\"upload-div\");},children:\"UPLOAD DATA\"})}),/*#__PURE__*/_jsxs(\"div\",{id:\"upload-div\",children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formFile\",className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Control,{className:\"form-control input-sm\",size:\"sm\",type:\"file\",accept:\".csv\",onChange:handleRawFileChange}),/*#__PURE__*/_jsx(Form.Select,{className:\"form-select input-sm\",size:\"sm\",\"aria-label\":\"column-selection\",onChange:handleColChange,children:csvColumns}),/*#__PURE__*/_jsxs(Form.Select,{className:\"form-select input-sm\",size:\"sm\",\"aria-label\":\"column-selection\",onChange:handleReductionMethodChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"none\",children:\"select a reduction method\"},\"none\"),/*#__PURE__*/_jsx(\"option\",{value:\"TSNE\",children:\"T-SNE\"},\"TSNE\"),/*#__PURE__*/_jsx(\"option\",{value:\"UMAP\",children:\"UMAP\"},\"UMAP\")]})]}),/*#__PURE__*/_jsx(ReductionOptions,{reductionMethod:reductionMethod,perplexity:perplexity,perplexityChanger:setPerplexity}),/*#__PURE__*/_jsxs(\"div\",{className:\"submitButton\",children:[/*#__PURE__*/_jsx(Button,{size:\"sm\",id:\"dataUploadButton\",variant:\"secondary\",onClick:function onClick(e){handleFileProject(e);},children:\"Project\"}),/*#__PURE__*/_jsx(LoadDataCircle,{loadingData:loadingData})]})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(Tooltip,{title:previousProjectionExplanation,arrow:true,children:/*#__PURE__*/_jsx(Button,{id:\"uploadShowButton\",variant:\"outline-primary\",onClick:function onClick(e){toggleDiv(e,\"quickload-div\");},children:\"QUICKLOAD\"})}),/*#__PURE__*/_jsxs(\"div\",{id:\"quickload-div\",children:[/*#__PURE__*/_jsx(Form.Group,{controlId:\"previousProjectionFile\",className:\"mb-3\",children:/*#__PURE__*/_jsx(Form.Control,{className:\"form-control input-sm\",size:\"sm\",type:\"file\",accept:\".json\",onChange:handleProjectedFileChange})}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-box\",children:[/*#__PURE__*/_jsx(Button,{size:\"sm\",id:\"cachedDataButton\",variant:\"secondary\",onClick:function onClick(e){handleFilePlot(e);},children:\"Load\"}),/*#__PURE__*/_jsx(Button,{size:\"sm\",id:\"bookmarkButton\",variant:\"outline-secondary\",onClick:function onClick(e){handleProjectionSave(e);},children:\"Download Projection\"})]})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(Button,{id:\"displaysettings\",variant:\"outline-primary\",onClick:function onClick(e){toggleDiv(e,\"displaysettings-div\");},children:\"DISPLAY SETTINGS\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"displaysettings-div\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sliderBlock\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Opacity\"}),/*#__PURE__*/_jsx(Slider,{size:\"small\",\"aria-label\":\"opacity\",value:opacity,onChange:handleOpacityChange,step:10,marks:true,min:0,max:100}),/*#__PURE__*/_jsx(\"p\",{className:\"paramValue\",children:opacity})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sliderBlock\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"sliderLabel\",children:\"Dot Size\"}),/*#__PURE__*/_jsx(Slider,{size:\"small\",\"aria-label\":\"dot-size\",value:dotSize,onChange:handleDotSizeChange,step:0.5,marks:true,min:0,max:5}),/*#__PURE__*/_jsx(\"p\",{className:\"paramValue\",children:dotSize})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"title\",children:\" AutoClusterer\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sliderBlock\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Few\"}),/*#__PURE__*/_jsx(Slider,{\"aria-label\":\"AutoCluster Number\",valueLabelDisplay:\"auto\",value:clusterThresholdDist,onChange:handleClusterThresholdDist,step:1,marks:true,min:1,max:50}),/*#__PURE__*/_jsx(\"p\",{children:\"  Many\"})]}),renderKey()]});};","map":{"version":3,"names":["useState","useEffect","Button","ToggleButton","Form","axios","drawProjection","clearSVG","changeOpacity","changeDotSize","toggleDotDisplay","autocheckPoints","Tooltip","Slider","CircularProgress","InfoTooltip","library","FontAwesomeIcon","faCheckSquare","faSquare","add","localDevURL","LoadDataCircle","loadingData","ReductionOptions","reductionMethod","perplexity","perplexityChanger","handlePerplexityChange","event","newPerplexity","myFunction","x","document","getElementById","style","display","KeyItem","props","checked","setChecked","label","checkedlabel","setCheckedLabel","handleClick","color","keywords","LeftPanel","width","height","rawFile","setRawFile","plottedData","setPlottedData","projectedFileData","setProjectedFileData","opacity","setOpacity","dotSize","setDotSize","clusterThresholdDist","setclusterThresholdDist","clusterMode","setClusterMode","setReductionMethod","setPerplexity","setLoadingData","csvOutput","setCsvOutput","csvColumns","setCsvColumns","colorMap","setColorMap","selectedCol","setSelectedCol","renderKey","length","map","info","uploadExplanation","previousProjectionExplanation","fileReader","FileReader","handleProjectedFileChange","e","onload","JSON","parse","target","result","readAsText","files","toggleDiv","id","handleFilePlot","newColorMap","Object","entries","req","data","stringify","console","log","post","then","response","catch","error","handleRawFileChange","rows","split","colNames","colItems","colName","push","handleColChange","value","handleReductionMethodChange","handleFileProject","preventDefault","dataToPlot","alert","handleProjectionSave","jsonString","encodeURIComponent","link","createElement","href","download","click","handleOpacityChange","newOpacity","handleDotSizeChange","newSize","handleClusterThresholdDist","newThreshold","get"],"sources":["/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/Cluster-Research-new/frontend/src/components/LeftPanel.js"],"sourcesContent":["import \"../App.css\";\nimport { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport Form from \"react-bootstrap/Form\";\nimport axios from \"axios\";\nimport {\n  drawProjection,\n  clearSVG,\n  changeOpacity,\n  changeDotSize,\n  toggleDotDisplay,\n  autocheckPoints,\n} from \"../d3-rendering/projectionManipulationFunctions.js\";\nimport Tooltip from '@mui/material/Tooltip';\nimport Slider from \"@mui/material/Slider\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { InfoTooltip } from \"./InfoTooltip.js\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckSquare, faSquare } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faCheckSquare, faSquare);\n\nconst localDevURL = \"http://127.0.0.1:8000/\";\n\nconst LoadDataCircle = ({ loadingData }) => {\n  if (!loadingData) {\n    return <div></div>;\n  } else {\n    return <CircularProgress />;\n  }\n};\n\nconst ReductionOptions = ({\n  reductionMethod,\n  perplexity,\n  perplexityChanger,\n}) => {\n  // Handle perplexity changes\n  const handlePerplexityChange = (event, newPerplexity) => {\n    if (newPerplexity !== perplexity) {\n      perplexityChanger(newPerplexity);\n    }\n  };\n\n  if (reductionMethod === \"TSNE\") {\n    return (\n      <div className=\"sliderBlock\">\n        <p>Perlexity</p>\n        <Slider\n          size=\"small\"\n          aria-label=\"perplexity\"\n          value={perplexity}\n          onChange={handlePerplexityChange}\n          min={0}\n          max={100}\n        />\n        <p className=\"paramValue\">{perplexity}</p>\n      </div>\n    );\n  } else if (reductionMethod === \"UMAP\") {\n    return <div></div>;\n  } else {\n    return <div></div>;\n  }\n};\nfunction myFunction() {\n  var x = document.getElementById(\"myDIV\");\n  if (x.style.display === \"none\") {\n    x.style.display = \"block\";\n  } else {\n    x.style.display = \"none\";\n  }\n}\n// Item in the category key\nconst KeyItem = ({ props }) => {\n  const [checked, setChecked] = useState(true);\n  const [checkedlabel, setCheckedLabel] = useState(props.label);\n\n  const handleClick = () => {\n    setChecked(!checked);\n    toggleDotDisplay(!checked, props.label);\n    autocheckPoints(props.label);\n  };\n\n  return (\n    <div className=\"key-item\" onClick={handleClick} spin>\n      {/* Custom checkbox */}\n      <FontAwesomeIcon\n        icon={checked ? \"check-square\" : \"square\"}\n        color={checked ? props.color : \"#FAFAFA\"}\n      />\n      <p>{props.label+\" : \"+props.keywords}</p>\n    </div>\n  );\n};\n\n// Data upload + control panel\nexport const LeftPanel = ({ width, height }) => {\n  const [rawFile, setRawFile] = useState(); // File that hasn't been projected yet\n  const [plottedData, setPlottedData] = useState([]); // Holds data that's currently plotted\n  const [projectedFileData, setProjectedFileData] = useState([]); // Holds previously projected data that's being uploaded\n  const [opacity, setOpacity] = useState(50);\n  const [dotSize, setDotSize] = useState(2);\n  const [clusterThresholdDist, setclusterThresholdDist] = useState(1);\n  const [clusterMode, setClusterMode] = useState(false)\n  const [reductionMethod, setReductionMethod] = useState(\"none\");\n  const [perplexity, setPerplexity] = useState(50);\n  const [loadingData, setLoadingData] = useState(false);\n  const [csvOutput, setCsvOutput] = useState(\"\");\n  const [csvColumns, setCsvColumns] = useState([\n    <option key=\"select-a-column\" value=\"select-a-column\">\n      select a column to color dots by\n    </option>,\n  ]); //reset\n  const [colorMap, setColorMap] = useState({});\n  const [selectedCol, setSelectedCol] = useState(\"none\");\n\n\n  function renderKey() {\n    if (colorMap.length > 0) {\n      return (\n        <>\n          <hr />\n          <div className=\"title\">\n            <p>Selection</p>\n          </div>\n\n          {colorMap.map((info) => {\n\n            return (\n              <KeyItem\n                props={{\n                  label: info[0],\n                  color: info[1][0],\n                  keywords: info[1][1],\n                }}\n              />\n            );\n          })}\n        </>\n      );\n    }\n  }\n\n  // Help explanations\n  const uploadExplanation =\n    \"Upload a CSV with embeddings and metadata to project\";\n  const previousProjectionExplanation =\n    \"Here, you can upload JSON files saved using the 'bookmark projection' button below\";\n\n  // File reader\n  const fileReader = new FileReader();\n\n  // Set projected file on projected file upload\n  const handleProjectedFileChange = (e) => {\n    fileReader.onload = function (event) {\n      setProjectedFileData(JSON.parse(event.target.result));\n    };\n\n    fileReader.readAsText(e.target.files[0]);\n    \n  };\n\n\n\n  const toggleDiv = (e, id) => {\n    var x = document.getElementById(id);\n    if (x.style.display === \"none\") {\n      x.style.display = \"block\";\n    } else {\n      x.style.display = \"none\";\n    }\n  }\n\n\n  // For plotting previously projected data\n  const handleFilePlot = (e) => {\n    // Clears svg and plots new data if there is new data\n    if (projectedFileData.length > 0) {\n      clearSVG();\n      setPlottedData(projectedFileData);\n      let newColorMap = drawProjection(width, height, projectedFileData);\n      setColorMap(Object.entries(newColorMap));\n      let req = {\n        data: JSON.stringify(projectedFileData),\n      };\n      console.log(projectedFileData)\n\n      axios //sending data to the backend\n        .post(localDevURL + \"quickload\", req)\n        .then((response) => {\n         console.log('Done')\n        })\n        .catch((error) => {\n          console.log(error);\n          setLoadingData(false);\n        });\n      setProjectedFileData([]);\n\n      \n    }\n  };\n\n  // Set raw file on raw file upload\n  const handleRawFileChange = (e) => {\n    setRawFile(e.target.files[0]);\n\n    // Uses first row from CSV to create dropdown of column names\n    let rows;\n    fileReader.onload = function (event) {\n      setCsvOutput(event.target.result);\n      console.log(event.target.result)\n\n\n      rows = event.target.result.split(\"\\n\");\n\n      let colNames = rows[0].split(\",\");\n\n      let colItems = [\n        <option key=\"select-a-column\" value=\"select-a-column\">\n          select a column to color dots by\n        </option>,\n        <option key=\"none\" value=\"none\">\n          none\n        </option>,\n      ];\n\n      for (let colName of colNames) {\n        colItems.push(\n          <option key={colName} value={colName}>\n            {colName}\n          </option>\n        );\n      }\n      setCsvColumns(colItems);\n      setSelectedCol(\"none\");\n    };\n\n    fileReader.readAsText(e.target.files[0]);\n  };\n\n  const handleColChange = (e) => {\n    setSelectedCol(e.target.value);\n  };\n\n  const handleReductionMethodChange = (e) => {\n    setReductionMethod(e.target.value);\n  };\n\n  //cost handleClusterThresholdChange\n\n  // Handle file projection\n  const handleFileProject = (e) => {\n    e.preventDefault();\n\n    // Submits post request if there is not a request already being processed\n    if (rawFile && !loadingData && reductionMethod !== \"none\") {\n      setLoadingData(true);\n\n      let req = {\n        data: csvOutput,\n        reductionMethod: reductionMethod,\n        selectedCol: selectedCol\n      };\n\n      // Constructing request based on reduction Method\n      if (reductionMethod === \"TSNE\") {\n        req.perplexity = perplexity;\n      }\n\n      axios //sending data to the backend\n        .post(localDevURL + \"upload-data\", req)\n        .then((response) => {\n         //console.log(\"SUCCESS\", response.data.data);\n          let dataToPlot = response.data.data;\n          clearSVG();\n          setPlottedData(dataToPlot);\n          let newColorMap = drawProjection(width, height, dataToPlot);\n          setColorMap(Object.entries(newColorMap));\n          setLoadingData(false);\n          //add something to send the cluster size to backend\n        })\n        .catch((error) => {\n          console.log(error);\n          setLoadingData(false);\n        });\n    } else if (!rawFile) {\n      alert(\"please upload a file\");\n    } else if (reductionMethod === \"none\") {\n      alert(\"please select a reduction method!\");\n      return;\n    }\n  };\n\n  // Handles save of currently projected data\n  const handleProjectionSave = (e) => {\n    const jsonString = `data:text/json;chatset=utf-8,${encodeURIComponent(\n      JSON.stringify(plottedData)\n    )}`;\n    // console.log(plottedData);\n    const link = document.createElement(\"a\");\n    link.href = jsonString;\n    link.download = \"data.json\";\n    link.click();\n  };\n\n  // SLIDERS\n\n  // Handle opacity changes\n  const handleOpacityChange = (event, newOpacity) => {\n    if (newOpacity !== opacity) {\n      setOpacity(newOpacity);\n    }\n  };\n\n  useEffect(() => {\n    //console.log(\"changing opacity\", opacity / 100);\n    changeOpacity(opacity / 100);\n  }, [opacity]);\n\n  // Handle dot size changes\n  const handleDotSizeChange = (event, newSize) => {\n    if (newSize !== dotSize) {\n      setDotSize(newSize);\n    }\n  };\n\n  useEffect(() => {\n   //console.log(\"changing dot size\", dotSize);\n    changeDotSize(dotSize);\n  }, [dotSize]);\n\n\n  // Handle cluster threshold distance changes\n  // const handleClusterThresholdDist = (event, newThreshold) => {\n    // if (newThreshold !== clusterThresholdDist) {\n    //   setclusterThresholdDist(newThreshold)\n    // }\n\n    \n  // }\n\n\n  const handleClusterThresholdDist = (event, newThreshold) => {\n    if (newThreshold !== clusterThresholdDist) {\n      setclusterThresholdDist(newThreshold)\n      //console.log(clusterThresholdDist)\n    }\n\n    // Submits post request if there is not a request already being processed\n    // if (clusterMode) {\n\n      let req = {\n        clusterThresholdDist: clusterThresholdDist\n      };\n\n      axios //sending data to the backend\n        .post(localDevURL + \"auto-cluster\", req)\n        .then((response) => {\n          //console.log(\"SUCCESS affected new cluster distance\");\n          let dataToPlot = response.data.data;\n          clearSVG();\n          setPlottedData(dataToPlot);\n          let newColorMap = drawProjection(width, height, dataToPlot);\n          setColorMap(Object.entries(newColorMap));\n          console.log(Object.entries(newColorMap));\n          setLoadingData(false);\n          //add something to send the cluster size to backend\n        })\n        .catch((error) => {\n          console.log(error);\n          setLoadingData(false);\n        });\n    // };\n    };\n\n  // useEffect(() => {\n  //   console.log(\"changing cluster threshold dist\", clusterThresholdDist);\n  //   let req = {\n  //     clusterThresholdDist: clusterThresholdDist\n  //   };\n\n\n  //   axios\n  //     .post(localDevURL + \"turn-on-cluster-mode\", req)\n  //     .then((response) => {\n  //       console.log(\"SUCCESS affected new cluster distance\");\n  //       let dataToPlot = response.data.data;\n  //       clearSVG();\n  //       setPlottedData(dataToPlot);\n  //       let newColorMap = drawProjection(width, height, dataToPlot);\n  //       setColorMap(Object.entries(newColorMap));\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n  // }, [clusterThresholdDist])\n\n  // Draw graph ONCE when the component mounts\n  useEffect(() => {\n    console.log(\"running effect\");\n    axios\n      .get(localDevURL + \"get-default-data\")\n      .then((response) => {\n        let dataToPlot = response.data.data;\n        setPlottedData(dataToPlot);\n        let newColorMap = drawProjection(width, height, dataToPlot);\n        setColorMap(Object.entries(newColorMap));\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [height, width]);\n\n  return (\n    <div className=\"left panel\">\n      <Tooltip title={uploadExplanation} arrow>\n        <Button  id=\"uploadShowButton\" variant='outline-primary'onClick={(e) => { toggleDiv(e, \"upload-div\");}}>UPLOAD DATA</Button>\n        </Tooltip>\n      <div id =\"upload-div\">\n        {/* File selection */}\n        <Form.Group controlId=\"formFile\" className=\"mb-3\">\n              <Form.Control\n                className=\"form-control input-sm\"\n                size=\"sm\"\n                type=\"file\"\n                accept=\".csv\"\n                onChange={handleRawFileChange}\n              />\n              <Form.Select\n                className=\"form-select input-sm\"\n                size=\"sm\"\n                aria-label=\"column-selection\"\n                onChange={handleColChange}\n              >\n                {csvColumns}\n              </Form.Select>\n              <Form.Select\n                className=\"form-select input-sm\"\n                size=\"sm\"\n                aria-label=\"column-selection\"\n                onChange={handleReductionMethodChange}\n              >\n                <option key=\"none\" value=\"none\">\n                  select a reduction method\n                </option>\n                <option key=\"TSNE\" value=\"TSNE\">\n                  T-SNE\n                </option>\n                <option key=\"UMAP\" value=\"UMAP\">\n                  UMAP\n                </option>\n              </Form.Select>\n        </Form.Group>\n\n        {/* TODO: add column selector*/}\n        {/* Dimensionality reduction method selection */}\n        <ReductionOptions\n          reductionMethod={reductionMethod}\n          perplexity={perplexity}\n          perplexityChanger={setPerplexity}\n            />\n        <div className=\"submitButton\">\n              <Button\n                size=\"sm\"\n                id=\"dataUploadButton\"\n                variant=\"secondary\"\n                onClick={(e) => {\n                  handleFileProject(e);\n                }}\n              >\n                Project\n              </Button>\n              <LoadDataCircle loadingData={loadingData} />\n        </div>\n      </div>\n      <hr />\n      {/* Use previously cached projection */}\n\n      <Tooltip title={previousProjectionExplanation} arrow>\n        <Button  id=\"uploadShowButton\" variant='outline-primary' onClick={(e) => { toggleDiv(e, \"quickload-div\");}}>QUICKLOAD</Button>\n        </Tooltip>\n      <div id =\"quickload-div\">\n      <Form.Group controlId=\"previousProjectionFile\" className=\"mb-3\">\n        <Form.Control\n          className=\"form-control input-sm\"\n          size=\"sm\"\n          type=\"file\"\n          accept=\".json\"\n          onChange={handleProjectedFileChange}\n        />\n      </Form.Group>\n      <div className=\"button-box\">\n        <Button\n          size=\"sm\"\n          id=\"cachedDataButton\"\n          variant=\"secondary\"\n          onClick={(e) => {\n            handleFilePlot(e);\n          }}\n        >\n          Load\n        </Button>\n        <Button\n          size=\"sm\"\n          id=\"bookmarkButton\"\n          variant=\"outline-secondary\"\n          onClick={(e) => {\n            handleProjectionSave(e);\n          }}\n        >\n          Download Projection\n        </Button>\n        </div>\n      </div>\n      <hr />\n\n      <Button  id=\"displaysettings\" variant='outline-primary' onClick={(e) => { toggleDiv(e, \"displaysettings-div\");}}>DISPLAY SETTINGS</Button>\n      <div id =\"displaysettings-div\">\n      <div className=\"sliderBlock\">\n        <p>Opacity</p>\n        <Slider\n          size=\"small\"\n          aria-label=\"opacity\"\n          value={opacity}\n          onChange={handleOpacityChange}\n          step={10}\n          marks\n          min={0}\n          max={100}\n        />\n        <p className=\"paramValue\">{opacity}</p>\n      </div>\n      <div className=\"sliderBlock\">\n        <p className=\"sliderLabel\">Dot Size</p>\n        <Slider\n          size=\"small\"\n          aria-label=\"dot-size\"\n          value={dotSize}\n          onChange={handleDotSizeChange}\n          step={0.5}\n          marks\n          min={0}\n          max={5}\n        />\n        <p className=\"paramValue\">{dotSize}</p>\n      </div>\n      </div>\n      {/* NEW: Find Clusters */}\n      <p className=\"title\"> AutoClusterer</p>\n      <div className=\"sliderBlock\">\n      <p>Few</p><Slider\n            aria-label=\"AutoCluster Number\"\n            valueLabelDisplay=\"auto\"\n            value={clusterThresholdDist}\n            onChange={handleClusterThresholdDist}\n            step={1}\n            marks\n            min={1}\n            max={50}\n          /><p>  Many</p>\n      </div>\n      {/* <div className=\"submitButton\">\n        <Button\n          size=\"sm\"\n          id=\"changeClusterMode\"\n          variant=\"secondary\"\n          onClick={setClusterMode(!clusterMode)}\n        >\n          project\n        </Button>\n      </div> */}\n      {renderKey()}\n\n      \n\n      </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}