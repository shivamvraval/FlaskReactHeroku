{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/Cluster-Research-new/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _slicedToArray from\"/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/Cluster-Research-new/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"../App.css\";import{useState,useEffect}from\"react\";import Button from\"react-bootstrap/Button\";import Form from\"react-bootstrap/Form\";import axios from\"axios\";import{drawProjection,clearSVG,changeOpacity,changeDotSize,toggleDotDisplay}from\"../d3-rendering/projectionManipulationFunctions.js\";import Slider from\"@mui/material/Slider\";import CircularProgress from\"@mui/material/CircularProgress\";import{InfoTooltip}from\"./InfoTooltip.js\";import{library}from\"@fortawesome/fontawesome-svg-core\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faCheckSquare,faSquare}from\"@fortawesome/free-solid-svg-icons\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";library.add(faCheckSquare,faSquare);var localDevURL=\"http://127.0.0.1:8000/\";var LoadDataCircle=function LoadDataCircle(_ref){var loadingData=_ref.loadingData;if(!loadingData){return/*#__PURE__*/_jsx(\"div\",{});}else{return/*#__PURE__*/_jsx(CircularProgress,{});}};var ReductionOptions=function ReductionOptions(_ref2){var reductionMethod=_ref2.reductionMethod,perplexity=_ref2.perplexity,perplexityChanger=_ref2.perplexityChanger;// Handle perplexity changes\nvar handlePerplexityChange=function handlePerplexityChange(event,newPerplexity){if(newPerplexity!==perplexity){perplexityChanger(newPerplexity);}};if(reductionMethod===\"TSNE\"){return/*#__PURE__*/_jsxs(\"div\",{className:\"sliderBlock\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Perlexity\"}),/*#__PURE__*/_jsx(Slider,{size:\"small\",\"aria-label\":\"perplexity\",value:perplexity,onChange:handlePerplexityChange,min:0,max:100}),/*#__PURE__*/_jsx(\"p\",{className:\"paramValue\",children:perplexity})]});}else if(reductionMethod===\"UMAP\"){return/*#__PURE__*/_jsx(\"div\",{});}else{return/*#__PURE__*/_jsx(\"div\",{});}};// Item in the category key\nvar KeyItem=function KeyItem(_ref3){var props=_ref3.props;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),checked=_useState2[0],setChecked=_useState2[1];var handleClick=function handleClick(){setChecked(!checked);toggleDotDisplay(!checked,props.color);};return/*#__PURE__*/_jsxs(\"div\",{className:\"key-item\",onClick:handleClick,spin:true,children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:checked?\"check-square\":\"square\",color:checked?props.color:\"#FAFAFA\"}),/*#__PURE__*/_jsx(\"p\",{children:props.label})]});};// Data upload + control panel\nexport var LeftPanel=function LeftPanel(_ref4){var width=_ref4.width,height=_ref4.height;var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),rawFile=_useState4[0],setRawFile=_useState4[1];// File that hasn't been projected yet\nvar _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),plottedData=_useState6[0],setPlottedData=_useState6[1];// Holds data that's currently plotted\nvar _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),projectedFileData=_useState8[0],setProjectedFileData=_useState8[1];// Holds previously projected data that's being uploaded\nvar _useState9=useState(50),_useState10=_slicedToArray(_useState9,2),opacity=_useState10[0],setOpacity=_useState10[1];var _useState11=useState(2),_useState12=_slicedToArray(_useState11,2),dotSize=_useState12[0],setDotSize=_useState12[1];var _useState13=useState(1),_useState14=_slicedToArray(_useState13,2),clusterThresholdDist=_useState14[0],setclusterThresholdDist=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),clusterMode=_useState16[0],setClusterMode=_useState16[1];var _useState17=useState(\"none\"),_useState18=_slicedToArray(_useState17,2),reductionMethod=_useState18[0],setReductionMethod=_useState18[1];var _useState19=useState(50),_useState20=_slicedToArray(_useState19,2),perplexity=_useState20[0],setPerplexity=_useState20[1];var _useState21=useState(false),_useState22=_slicedToArray(_useState21,2),loadingData=_useState22[0],setLoadingData=_useState22[1];var _useState23=useState(\"\"),_useState24=_slicedToArray(_useState23,2),csvOutput=_useState24[0],setCsvOutput=_useState24[1];var _useState25=useState([/*#__PURE__*/_jsx(\"option\",{value:\"select-a-column\",children:\"select a column to color dots by\"},\"select-a-column\")]),_useState26=_slicedToArray(_useState25,2),csvColumns=_useState26[0],setCsvColumns=_useState26[1];//reset\nvar _useState27=useState({}),_useState28=_slicedToArray(_useState27,2),colorMap=_useState28[0],setColorMap=_useState28[1];var _useState29=useState(\"none\"),_useState30=_slicedToArray(_useState29,2),selectedCol=_useState30[0],setSelectedCol=_useState30[1];function renderKey(){if(colorMap.length>0){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Category Visibility\"})}),colorMap.map(function(info){{console.log(info);}return/*#__PURE__*/_jsx(KeyItem,{props:{label:info[0],color:info[1]}});})]});}}// Help explanations\nvar uploadExplanation=\"Upload a CSV with columns corresponding to embedding dimensions and a column titled 'label' that contains the token names. To color the points using categorical information, include that column in the CSV and select it in the color selection dropdown below.\";var previousProjectionExplanation=\"Here, you can upload JSON files saved using the 'bookmark projection' button below\";// File reader\nvar fileReader=new FileReader();// Set projected file on projected file upload\nvar handleProjectedFileChange=function handleProjectedFileChange(e){fileReader.onload=function(event){setProjectedFileData(JSON.parse(event.target.result));};fileReader.readAsText(e.target.files[0]);};// For plotting previously projected data\nvar handleFilePlot=function handleFilePlot(e){// Clears svg and plots new data if there is new data\nif(projectedFileData.length>0){clearSVG();setPlottedData(projectedFileData);var newColorMap=drawProjection(width,height,projectedFileData);setColorMap(Object.entries(newColorMap));setProjectedFileData([]);}};// Set raw file on raw file upload\nvar handleRawFileChange=function handleRawFileChange(e){setRawFile(e.target.files[0]);// Uses first row from CSV to create dropdown of column names\nvar rows;fileReader.onload=function(event){setCsvOutput(event.target.result);rows=event.target.result.split(\"\\n\");var colNames=rows[0].split(\",\");var colItems=[/*#__PURE__*/_jsx(\"option\",{value:\"select-a-column\",children:\"select a column to color dots by\"},\"select-a-column\"),/*#__PURE__*/_jsx(\"option\",{value:\"none\",children:\"none\"},\"none\")];var _iterator=_createForOfIteratorHelper(colNames),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var colName=_step.value;colItems.push(/*#__PURE__*/_jsx(\"option\",{value:colName,children:colName},colName));}}catch(err){_iterator.e(err);}finally{_iterator.f();}setCsvColumns(colItems);setSelectedCol(\"none\");};fileReader.readAsText(e.target.files[0]);};var handleColChange=function handleColChange(e){setSelectedCol(e.target.value);};var handleReductionMethodChange=function handleReductionMethodChange(e){setReductionMethod(e.target.value);};//cost handleClusterThresholdChange\n// Handle file projection\nvar handleFileProject=function handleFileProject(e){e.preventDefault();// Submits post request if there is not a request already being processed\nif(rawFile&&!loadingData&&reductionMethod!==\"none\"){setLoadingData(true);var req={data:csvOutput,reductionMethod:reductionMethod,selectedCol:selectedCol};// Constructing request based on reduction Method\nif(reductionMethod===\"TSNE\"){req.perplexity=perplexity;}axios//sending data to the backend\n.post(localDevURL+\"upload-data\",req).then(function(response){//console.log(\"SUCCESS\", response.data.data);\nvar dataToPlot=response.data.data;clearSVG();setPlottedData(dataToPlot);var newColorMap=drawProjection(width,height,dataToPlot);setColorMap(Object.entries(newColorMap));console.log(Object.entries(newColorMap));setLoadingData(false);//add something to send the cluster size to backend\n}).catch(function(error){console.log(error);setLoadingData(false);});}else if(!rawFile){alert(\"please upload a file\");}else if(reductionMethod===\"none\"){alert(\"please select a reduction method!\");return;}};// Handles save of currently projected data\nvar handleProjectionSave=function handleProjectionSave(e){var jsonString=\"data:text/json;chatset=utf-8,\".concat(encodeURIComponent(JSON.stringify(plottedData)));// console.log(plottedData);\nvar link=document.createElement(\"a\");link.href=jsonString;link.download=\"data.json\";link.click();};// SLIDERS\n// Handle opacity changes\nvar handleOpacityChange=function handleOpacityChange(event,newOpacity){if(newOpacity!==opacity){setOpacity(newOpacity);}};useEffect(function(){//console.log(\"changing opacity\", opacity / 100);\nchangeOpacity(opacity/100);},[opacity]);// Handle dot size changes\nvar handleDotSizeChange=function handleDotSizeChange(event,newSize){if(newSize!==dotSize){setDotSize(newSize);}};useEffect(function(){//console.log(\"changing dot size\", dotSize);\nchangeDotSize(dotSize);},[dotSize]);// Handle cluster threshold distance changes\n// const handleClusterThresholdDist = (event, newThreshold) => {\n// if (newThreshold !== clusterThresholdDist) {\n//   setclusterThresholdDist(newThreshold)\n// }\n// }\nvar handleClusterThresholdDist=function handleClusterThresholdDist(event,newThreshold){if(newThreshold!==clusterThresholdDist){setclusterThresholdDist(newThreshold);//console.log(clusterThresholdDist)\n}// Submits post request if there is not a request already being processed\n// if (clusterMode) {\nvar req={clusterThresholdDist:clusterThresholdDist};axios//sending data to the backend\n.post(localDevURL+\"turn-on-cluster-mode\",req).then(function(response){//console.log(\"SUCCESS affected new cluster distance\");\nvar dataToPlot=response.data.data;clearSVG();setPlottedData(dataToPlot);var newColorMap=drawProjection(width,height,dataToPlot);setColorMap(Object.entries(newColorMap));console.log(Object.entries(newColorMap));setLoadingData(false);//add something to send the cluster size to backend\n}).catch(function(error){console.log(error);setLoadingData(false);});// };\n};// useEffect(() => {\n//   console.log(\"changing cluster threshold dist\", clusterThresholdDist);\n//   let req = {\n//     clusterThresholdDist: clusterThresholdDist\n//   };\n//   axios\n//     .post(localDevURL + \"turn-on-cluster-mode\", req)\n//     .then((response) => {\n//       console.log(\"SUCCESS affected new cluster distance\");\n//       let dataToPlot = response.data.data;\n//       clearSVG();\n//       setPlottedData(dataToPlot);\n//       let newColorMap = drawProjection(width, height, dataToPlot);\n//       setColorMap(Object.entries(newColorMap));\n//     })\n//     .catch((error) => {\n//       console.log(error);\n//     });\n// }, [clusterThresholdDist])\n// Draw graph ONCE when the component mounts\nuseEffect(function(){console.log(\"running effect\");axios.get(localDevURL+\"get-default-data\").then(function(response){console.log(\"SUCCESS\",response.data.data);var dataToPlot=response.data.data;setPlottedData(dataToPlot);var newColorMap=drawProjection(width,height,dataToPlot);setColorMap(Object.entries(newColorMap));}).catch(function(error){console.log(error);});},[height,width]);return/*#__PURE__*/_jsxs(\"div\",{className:\"left panel\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"title\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Upload\"}),/*#__PURE__*/_jsx(InfoTooltip,{text:uploadExplanation})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formFile\",className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Control,{className:\"form-control\",size:\"sm\",type:\"file\",accept:\".csv\",onChange:handleRawFileChange}),/*#__PURE__*/_jsx(Form.Select,{className:\"form-select\",size:\"sm\",\"aria-label\":\"column-selection\",onChange:handleColChange,children:csvColumns}),/*#__PURE__*/_jsxs(Form.Select,{className:\"form-select\",size:\"sm\",\"aria-label\":\"column-selection\",onChange:handleReductionMethodChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"none\",children:\"select a reduction method\"},\"none\"),/*#__PURE__*/_jsx(\"option\",{value:\"TSNE\",children:\"T-SNE\"},\"TSNE\"),/*#__PURE__*/_jsx(\"option\",{value:\"UMAP\",children:\"UMAP\"},\"UMAP\")]})]}),/*#__PURE__*/_jsx(ReductionOptions,{reductionMethod:reductionMethod,perplexity:perplexity,perplexityChanger:setPerplexity}),/*#__PURE__*/_jsxs(\"div\",{className:\"submitButton\",children:[/*#__PURE__*/_jsx(Button,{size:\"sm\",id:\"dataUploadButton\",variant:\"secondary\",onClick:function onClick(e){handleFileProject(e);},children:\"Project\"}),/*#__PURE__*/_jsx(LoadDataCircle,{loadingData:loadingData})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"title\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"QuickLoad Projection\"}),/*#__PURE__*/_jsx(InfoTooltip,{text:previousProjectionExplanation})]}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"previousProjectionFile\",className:\"mb-3\",children:/*#__PURE__*/_jsx(Form.Control,{className:\"form-control\",size:\"sm\",type:\"file\",accept:\".json\",onChange:handleProjectedFileChange})}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-box\",children:[/*#__PURE__*/_jsx(Button,{size:\"sm\",id:\"cachedDataButton\",variant:\"secondary\",onClick:function onClick(e){handleFilePlot(e);},children:\"Load\"}),/*#__PURE__*/_jsx(Button,{size:\"sm\",id:\"bookmarkButton\",variant:\"outline-secondary\",onClick:function onClick(e){handleProjectionSave(e);},children:\"Download Projection\"})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"p\",{className:\"title\",children:\" Display settings\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sliderBlock\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Opacity\"}),/*#__PURE__*/_jsx(Slider,{size:\"small\",\"aria-label\":\"opacity\",value:opacity,onChange:handleOpacityChange,step:10,marks:true,min:0,max:100}),/*#__PURE__*/_jsx(\"p\",{className:\"paramValue\",children:opacity})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sliderBlock\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"sliderLabel\",children:\"Dot Size\"}),/*#__PURE__*/_jsx(Slider,{size:\"small\",\"aria-label\":\"dot-size\",value:dotSize,onChange:handleDotSizeChange,step:0.5,marks:true,min:0,max:5}),/*#__PURE__*/_jsx(\"p\",{className:\"paramValue\",children:dotSize})]}),/*#__PURE__*/_jsx(\"p\",{className:\"title\",children:\" AutoCluster \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sliderBlock\",children:[/*#__PURE__*/_jsx(Slider,{size:\"small\",\"aria-label\":\"cluster_threshold_dist\",value:clusterThresholdDist,onChange:handleClusterThresholdDist,step:1,marks:true,min:5,max:100}),/*#__PURE__*/_jsx(\"p\",{className:\"paramValue\",children:clusterThresholdDist})]}),renderKey()]});};","map":{"version":3,"names":["useState","useEffect","Button","Form","axios","drawProjection","clearSVG","changeOpacity","changeDotSize","toggleDotDisplay","Slider","CircularProgress","InfoTooltip","library","FontAwesomeIcon","faCheckSquare","faSquare","add","localDevURL","LoadDataCircle","loadingData","ReductionOptions","reductionMethod","perplexity","perplexityChanger","handlePerplexityChange","event","newPerplexity","KeyItem","props","checked","setChecked","handleClick","color","label","LeftPanel","width","height","rawFile","setRawFile","plottedData","setPlottedData","projectedFileData","setProjectedFileData","opacity","setOpacity","dotSize","setDotSize","clusterThresholdDist","setclusterThresholdDist","clusterMode","setClusterMode","setReductionMethod","setPerplexity","setLoadingData","csvOutput","setCsvOutput","csvColumns","setCsvColumns","colorMap","setColorMap","selectedCol","setSelectedCol","renderKey","length","map","info","console","log","uploadExplanation","previousProjectionExplanation","fileReader","FileReader","handleProjectedFileChange","e","onload","JSON","parse","target","result","readAsText","files","handleFilePlot","newColorMap","Object","entries","handleRawFileChange","rows","split","colNames","colItems","colName","push","handleColChange","value","handleReductionMethodChange","handleFileProject","preventDefault","req","data","post","then","response","dataToPlot","catch","error","alert","handleProjectionSave","jsonString","encodeURIComponent","stringify","link","document","createElement","href","download","click","handleOpacityChange","newOpacity","handleDotSizeChange","newSize","handleClusterThresholdDist","newThreshold","get"],"sources":["/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/Cluster-Research-new/frontend/src/components/LeftPanel.js"],"sourcesContent":["import \"../App.css\";\nimport { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport axios from \"axios\";\nimport {\n  drawProjection,\n  clearSVG,\n  changeOpacity,\n  changeDotSize,\n  toggleDotDisplay,\n} from \"../d3-rendering/projectionManipulationFunctions.js\";\nimport Slider from \"@mui/material/Slider\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { InfoTooltip } from \"./InfoTooltip.js\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckSquare, faSquare } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faCheckSquare, faSquare);\n\nconst localDevURL = \"http://127.0.0.1:8000/\";\n\nconst LoadDataCircle = ({ loadingData }) => {\n  if (!loadingData) {\n    return <div></div>;\n  } else {\n    return <CircularProgress />;\n  }\n};\n\nconst ReductionOptions = ({\n  reductionMethod,\n  perplexity,\n  perplexityChanger,\n}) => {\n  // Handle perplexity changes\n  const handlePerplexityChange = (event, newPerplexity) => {\n    if (newPerplexity !== perplexity) {\n      perplexityChanger(newPerplexity);\n    }\n  };\n\n  if (reductionMethod === \"TSNE\") {\n    return (\n      <div className=\"sliderBlock\">\n        <p>Perlexity</p>\n        <Slider\n          size=\"small\"\n          aria-label=\"perplexity\"\n          value={perplexity}\n          onChange={handlePerplexityChange}\n          min={0}\n          max={100}\n        />\n        <p className=\"paramValue\">{perplexity}</p>\n      </div>\n    );\n  } else if (reductionMethod === \"UMAP\") {\n    return <div></div>;\n  } else {\n    return <div></div>;\n  }\n};\n\n// Item in the category key\nconst KeyItem = ({ props }) => {\n  const [checked, setChecked] = useState(true);\n\n  const handleClick = () => {\n    setChecked(!checked);\n    toggleDotDisplay(!checked, props.color);\n  };\n\n  return (\n    <div className=\"key-item\" onClick={handleClick} spin>\n      {/* Custom checkbox */}\n      <FontAwesomeIcon\n        icon={checked ? \"check-square\" : \"square\"}\n        color={checked ? props.color : \"#FAFAFA\"}\n      />\n      <p>{props.label}</p>\n    </div>\n  );\n};\n\n// Data upload + control panel\nexport const LeftPanel = ({ width, height }) => {\n  const [rawFile, setRawFile] = useState(); // File that hasn't been projected yet\n  const [plottedData, setPlottedData] = useState([]); // Holds data that's currently plotted\n  const [projectedFileData, setProjectedFileData] = useState([]); // Holds previously projected data that's being uploaded\n  const [opacity, setOpacity] = useState(50);\n  const [dotSize, setDotSize] = useState(2);\n  const [clusterThresholdDist, setclusterThresholdDist] = useState(1);\n  const [clusterMode, setClusterMode] = useState(false)\n  const [reductionMethod, setReductionMethod] = useState(\"none\");\n  const [perplexity, setPerplexity] = useState(50);\n  const [loadingData, setLoadingData] = useState(false);\n  const [csvOutput, setCsvOutput] = useState(\"\");\n  const [csvColumns, setCsvColumns] = useState([\n    <option key=\"select-a-column\" value=\"select-a-column\">\n      select a column to color dots by\n    </option>,\n  ]); //reset\n  const [colorMap, setColorMap] = useState({});\n  const [selectedCol, setSelectedCol] = useState(\"none\");\n\n  function renderKey() {\n    if (colorMap.length > 0) {\n      return (\n        <>\n          <hr />\n          <div className=\"title\">\n            <p>Category Visibility</p>\n          </div>\n\n          {colorMap.map((info) => {\n            {\n              console.log(info);\n            }\n            return (\n              <KeyItem\n                props={{\n                  label: info[0],\n                  color: info[1],\n                }}\n              />\n            );\n          })}\n        </>\n      );\n    }\n  }\n\n  // Help explanations\n  const uploadExplanation =\n    \"Upload a CSV with columns corresponding to embedding dimensions and a column titled 'label' that contains the token names. To color the points using categorical information, include that column in the CSV and select it in the color selection dropdown below.\";\n  const previousProjectionExplanation =\n    \"Here, you can upload JSON files saved using the 'bookmark projection' button below\";\n\n  // File reader\n  const fileReader = new FileReader();\n\n  // Set projected file on projected file upload\n  const handleProjectedFileChange = (e) => {\n    fileReader.onload = function (event) {\n      setProjectedFileData(JSON.parse(event.target.result));\n    };\n\n    fileReader.readAsText(e.target.files[0]);\n  };\n\n  // For plotting previously projected data\n  const handleFilePlot = (e) => {\n    // Clears svg and plots new data if there is new data\n    if (projectedFileData.length > 0) {\n      clearSVG();\n      setPlottedData(projectedFileData);\n      let newColorMap = drawProjection(width, height, projectedFileData);\n      setColorMap(Object.entries(newColorMap));\n      setProjectedFileData([]);\n    }\n  };\n\n  // Set raw file on raw file upload\n  const handleRawFileChange = (e) => {\n    setRawFile(e.target.files[0]);\n\n    // Uses first row from CSV to create dropdown of column names\n    let rows;\n    fileReader.onload = function (event) {\n      setCsvOutput(event.target.result);\n\n      rows = event.target.result.split(\"\\n\");\n\n      let colNames = rows[0].split(\",\");\n\n      let colItems = [\n        <option key=\"select-a-column\" value=\"select-a-column\">\n          select a column to color dots by\n        </option>,\n        <option key=\"none\" value=\"none\">\n          none\n        </option>,\n      ];\n\n      for (let colName of colNames) {\n        colItems.push(\n          <option key={colName} value={colName}>\n            {colName}\n          </option>\n        );\n      }\n      setCsvColumns(colItems);\n      setSelectedCol(\"none\");\n    };\n\n    fileReader.readAsText(e.target.files[0]);\n  };\n\n  const handleColChange = (e) => {\n    setSelectedCol(e.target.value);\n  };\n\n  const handleReductionMethodChange = (e) => {\n    setReductionMethod(e.target.value);\n  };\n\n  //cost handleClusterThresholdChange\n\n  // Handle file projection\n  const handleFileProject = (e) => {\n    e.preventDefault();\n\n    // Submits post request if there is not a request already being processed\n    if (rawFile && !loadingData && reductionMethod !== \"none\") {\n      setLoadingData(true);\n\n      let req = {\n        data: csvOutput,\n        reductionMethod: reductionMethod,\n        selectedCol: selectedCol\n      };\n\n      // Constructing request based on reduction Method\n      if (reductionMethod === \"TSNE\") {\n        req.perplexity = perplexity;\n      }\n\n      axios //sending data to the backend\n        .post(localDevURL + \"upload-data\", req)\n        .then((response) => {\n         //console.log(\"SUCCESS\", response.data.data);\n          let dataToPlot = response.data.data;\n          clearSVG();\n          setPlottedData(dataToPlot);\n          let newColorMap = drawProjection(width, height, dataToPlot);\n          setColorMap(Object.entries(newColorMap));\n          console.log(Object.entries(newColorMap));\n          setLoadingData(false);\n          //add something to send the cluster size to backend\n        })\n        .catch((error) => {\n          console.log(error);\n          setLoadingData(false);\n        });\n    } else if (!rawFile) {\n      alert(\"please upload a file\");\n    } else if (reductionMethod === \"none\") {\n      alert(\"please select a reduction method!\");\n      return;\n    }\n  };\n\n  // Handles save of currently projected data\n  const handleProjectionSave = (e) => {\n    const jsonString = `data:text/json;chatset=utf-8,${encodeURIComponent(\n      JSON.stringify(plottedData)\n    )}`;\n    // console.log(plottedData);\n    const link = document.createElement(\"a\");\n    link.href = jsonString;\n    link.download = \"data.json\";\n    link.click();\n  };\n\n  // SLIDERS\n\n  // Handle opacity changes\n  const handleOpacityChange = (event, newOpacity) => {\n    if (newOpacity !== opacity) {\n      setOpacity(newOpacity);\n    }\n  };\n\n  useEffect(() => {\n    //console.log(\"changing opacity\", opacity / 100);\n    changeOpacity(opacity / 100);\n  }, [opacity]);\n\n  // Handle dot size changes\n  const handleDotSizeChange = (event, newSize) => {\n    if (newSize !== dotSize) {\n      setDotSize(newSize);\n    }\n  };\n\n  useEffect(() => {\n   //console.log(\"changing dot size\", dotSize);\n    changeDotSize(dotSize);\n  }, [dotSize]);\n\n\n  // Handle cluster threshold distance changes\n  // const handleClusterThresholdDist = (event, newThreshold) => {\n    // if (newThreshold !== clusterThresholdDist) {\n    //   setclusterThresholdDist(newThreshold)\n    // }\n\n    \n  // }\n\n\n  const handleClusterThresholdDist = (event, newThreshold) => {\n    if (newThreshold !== clusterThresholdDist) {\n      setclusterThresholdDist(newThreshold)\n      //console.log(clusterThresholdDist)\n    }\n\n    // Submits post request if there is not a request already being processed\n    // if (clusterMode) {\n\n      let req = {\n        clusterThresholdDist: clusterThresholdDist\n      };\n\n      axios //sending data to the backend\n        .post(localDevURL + \"turn-on-cluster-mode\", req)\n        .then((response) => {\n          //console.log(\"SUCCESS affected new cluster distance\");\n          let dataToPlot = response.data.data;\n          clearSVG();\n          setPlottedData(dataToPlot);\n          let newColorMap = drawProjection(width, height, dataToPlot);\n          setColorMap(Object.entries(newColorMap));\n          console.log(Object.entries(newColorMap));\n          setLoadingData(false);\n          //add something to send the cluster size to backend\n        })\n        .catch((error) => {\n          console.log(error);\n          setLoadingData(false);\n        });\n    // };\n    };\n\n  // useEffect(() => {\n  //   console.log(\"changing cluster threshold dist\", clusterThresholdDist);\n  //   let req = {\n  //     clusterThresholdDist: clusterThresholdDist\n  //   };\n\n\n  //   axios\n  //     .post(localDevURL + \"turn-on-cluster-mode\", req)\n  //     .then((response) => {\n  //       console.log(\"SUCCESS affected new cluster distance\");\n  //       let dataToPlot = response.data.data;\n  //       clearSVG();\n  //       setPlottedData(dataToPlot);\n  //       let newColorMap = drawProjection(width, height, dataToPlot);\n  //       setColorMap(Object.entries(newColorMap));\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n  // }, [clusterThresholdDist])\n\n  // Draw graph ONCE when the component mounts\n  useEffect(() => {\n    console.log(\"running effect\");\n    axios\n      .get(localDevURL + \"get-default-data\")\n      .then((response) => {\n        console.log(\"SUCCESS\", response.data.data);\n        let dataToPlot = response.data.data;\n        setPlottedData(dataToPlot);\n        let newColorMap = drawProjection(width, height, dataToPlot);\n        setColorMap(Object.entries(newColorMap));\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [height, width]);\n\n  return (\n    <div className=\"left panel\">\n      <div className=\"title\">\n        <p>Upload</p>\n        <InfoTooltip text={uploadExplanation} />\n      </div>\n      {/* File selection */}\n      <Form.Group controlId=\"formFile\" className=\"mb-3\">\n        <Form.Control\n          className=\"form-control\"\n          size=\"sm\"\n          type=\"file\"\n          accept=\".csv\"\n          onChange={handleRawFileChange}\n        />\n        <Form.Select\n          className=\"form-select\"\n          size=\"sm\"\n          aria-label=\"column-selection\"\n          onChange={handleColChange}\n        >\n          {csvColumns}\n        </Form.Select>\n        <Form.Select\n          className=\"form-select\"\n          size=\"sm\"\n          aria-label=\"column-selection\"\n          onChange={handleReductionMethodChange}\n        >\n          <option key=\"none\" value=\"none\">\n            select a reduction method\n          </option>\n          <option key=\"TSNE\" value=\"TSNE\">\n            T-SNE\n          </option>\n          <option key=\"UMAP\" value=\"UMAP\">\n            UMAP\n          </option>\n        </Form.Select>\n      </Form.Group>\n\n      {/* TODO: add column selector*/}\n      {/* Dimensionality reduction method selection */}\n      <ReductionOptions\n        reductionMethod={reductionMethod}\n        perplexity={perplexity}\n        perplexityChanger={setPerplexity}\n      />\n      <div className=\"submitButton\">\n        <Button\n          size=\"sm\"\n          id=\"dataUploadButton\"\n          variant=\"secondary\"\n          onClick={(e) => {\n            handleFileProject(e);\n          }}\n        >\n          Project\n        </Button>\n        <LoadDataCircle loadingData={loadingData} />\n      </div>\n\n      <hr />\n      {/* Use previously cached projection */}\n      <div className=\"title\">\n        <p>QuickLoad Projection</p>\n        <InfoTooltip text={previousProjectionExplanation} />\n      </div>\n      <Form.Group controlId=\"previousProjectionFile\" className=\"mb-3\">\n        <Form.Control\n          className=\"form-control\"\n          size=\"sm\"\n          type=\"file\"\n          accept=\".json\"\n          onChange={handleProjectedFileChange}\n        />\n      </Form.Group>\n      <div className=\"button-box\">\n        <Button\n          size=\"sm\"\n          id=\"cachedDataButton\"\n          variant=\"secondary\"\n          onClick={(e) => {\n            handleFilePlot(e);\n          }}\n        >\n          Load\n        </Button>\n        <Button\n          size=\"sm\"\n          id=\"bookmarkButton\"\n          variant=\"outline-secondary\"\n          onClick={(e) => {\n            handleProjectionSave(e);\n          }}\n        >\n          Download Projection\n        </Button>\n      </div>\n      <hr />\n\n      <p className=\"title\"> Display settings</p>\n      <div className=\"sliderBlock\">\n        <p>Opacity</p>\n        <Slider\n          size=\"small\"\n          aria-label=\"opacity\"\n          value={opacity}\n          onChange={handleOpacityChange}\n          step={10}\n          marks\n          min={0}\n          max={100}\n        />\n        <p className=\"paramValue\">{opacity}</p>\n      </div>\n      <div className=\"sliderBlock\">\n        <p className=\"sliderLabel\">Dot Size</p>\n        <Slider\n          size=\"small\"\n          aria-label=\"dot-size\"\n          value={dotSize}\n          onChange={handleDotSizeChange}\n          step={0.5}\n          marks\n          min={0}\n          max={5}\n        />\n        <p className=\"paramValue\">{dotSize}</p>\n      </div>\n      {/* NEW: Find Clusters */}\n      <p className=\"title\"> AutoCluster </p>\n      <div className=\"sliderBlock\">\n          <Slider\n            size=\"small\"\n            aria-label=\"cluster_threshold_dist\"\n            value={clusterThresholdDist}\n            onChange={handleClusterThresholdDist}\n            step={1}\n            marks\n            min={5}\n            max={100}\n          />\n          <p className=\"paramValue\">{clusterThresholdDist}</p>\n      </div>\n      {/* <div className=\"submitButton\">\n        <Button\n          size=\"sm\"\n          id=\"changeClusterMode\"\n          variant=\"secondary\"\n          onClick={setClusterMode(!clusterMode)}\n        >\n          project\n        </Button>\n      </div> */}\n      {renderKey()}\n\n      \n\n      </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}