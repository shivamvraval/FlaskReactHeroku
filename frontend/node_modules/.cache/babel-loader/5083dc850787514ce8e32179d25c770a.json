{"ast":null,"code":"import _slicedToArray from\"/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/Cluster-Research-new/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _createForOfIteratorHelper from\"/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/Cluster-Research-new/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import*as d3 from\"d3\";// Storing state location data for quicker access\n/*\n  Schema:\n  database = {\n    id: {\n      cx: float\n      cy: float\n      label: string\n      originalColor: color\n    }\n  }\n  */ // Global variables\nvar database={};// Database of projected points\nvar colorMap={};// Map of label --> color\nvar globalOpacity=0.5;// Default opacity\nvar globalDotSize=2;// Default dot size\n// Clears SVG in the center panel when new data is uploaded\nfunction clearSVG(){var svg=d3.select(\"#containerSVG\");svg.selectAll(\"circle\").remove();// Removes plotted points\nsvg.selectAll(\"#lasso\").attr(\"d\",\"\");// Resets lasso\n}// Function to draw projection, called once at render time and when new data is uploaded\n/*\n  Schema:\n  width = float\n  height = float\n  uploadedData = [x, y, label, color(if color column selected)]\n*/function drawProjection(width,height,uploadedData){var data=JSON.parse(JSON.stringify(uploadedData));// Location var\nvar MARGIN={top:20,right:0,bottom:50,left:85},SVG_X=width,SVG_Y=height,PLOT_X=SVG_X-MARGIN.right-MARGIN.left,PLOT_Y=SVG_Y-MARGIN.top-MARGIN.bottom;var x=d3.scaleLinear().range([MARGIN.left,PLOT_X]),y=d3.scaleLinear().range([PLOT_Y,MARGIN.top]);// SVG\nvar svg=d3.select(\"#containerSVG\");// Re-setting database and colorMap and using uploaded data to draw when data has been loaded\ndatabase={};colorMap={};if(data[0].length===4){makeColorMap(data);}var d_extent_x=d3.extent(data,function(d){return+d[0];}),d_extent_y=d3.extent(data,function(d){return+d[1];});// Draw axes\nx.domain(d_extent_x);y.domain(d_extent_y);// Generate IDs for points\nvar _iterator=_createForOfIteratorHelper(data),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var row=_step.value;row.push(makeid(10));}// Draw circles\n}catch(err){_iterator.e(err);}finally{_iterator.f();}svg.append(\"g\").selectAll(\"circle\").data(data).enter().append(\"circle\").attr(\"r\",globalDotSize).attr(\"opacity\",globalOpacity).attr(\"id\",function(d){var id=d[d.length-1];database[id]={label:d[2]};return id;}).attr(\"cx\",function(d){var centerX=x(+d[0]);database[d[d.length-1]].cx=centerX;return centerX;}).attr(\"cy\",function(d){var centerY=y(+d[1]);database[d[d.length-1]].cy=centerY;return centerY;}).attr(\"fill\",function(d){if(d.length===5){return assignColor(d[3],d[4]);}else{database[d[d.length-1]].originalColor=\"black\";return\"black\";}}).attr(\"class\",\"non-brushed\");svg.append(\"g\");return colorMap;}function makeColorMap(data){var uniqueCategories=new Set();var _iterator2=_createForOfIteratorHelper(data),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var item=_step2.value;if(uniqueCategories.has(item[3])){continue;}else{uniqueCategories.add(item[3]);}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}var categoriesArray=Array.from(uniqueCategories);for(var i=0;i<categoriesArray.length;i++){colorMap[categoriesArray[i]]=COLORS[i%11];}}var COLORS=['#e6194B','#3cb44b','#ffe119','#4363d8','#f58231','#911eb4','#42d4f4','#f032e6','#bfef45','#fabed4','#469990','#dcbeff','#9A6324','#fffac8','#800000','#aaffc3','#808000','#ffd8b1','#000075','#a9a9a9','#ffffff','#000000'];function assignColor(category,id){database[id].category=category;database[id].originalColor=colorMap[category];return colorMap[category];}// Displays dots based on if the checkbox corresponding to their color is checked\nfunction toggleDotDisplay(checked,color){d3.selectAll(\"circle\").filter(function(){if(database[d3.select(this).attr(\"id\")]){return database[d3.select(this).attr(\"id\")].originalColor===color;}else{return false;}}).attr(\"visibility\",function(){if(checked){return\"visible\";}else{return\"hidden\";}}).attr(\"opacity\",function(){if(checked){return\"1\";}else{return\"0\";}});}// Check if points are within path on mouseup\nfunction checkPoints(){var path=document.getElementById(\"lasso\");var svg=document.getElementsByTagName(\"svg\")[0];var brushedPoints=[];var categorizedPoints=[];var selectedLabels=[];// d3.polygonContains(lassoPolygon, [x, y]);\nvar _loop=function _loop(){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),id=_Object$entries$_i[0],idInfo=_Object$entries$_i[1];// Ignores point if it's not currently displayed\nif(d3.select(\"#\"+id).attr(\"visibility\")===\"hidden\"){return\"continue\";}var point=svg.createSVGPoint();point.x=idInfo.cx;point.y=idInfo.cy;// Check if point is in path\nif(path.isPointInFill(point)){idInfo.id=id;brushedPoints.push(idInfo);categorizedPoints.push([idInfo.label,1]);selectedLabels.push(idInfo.label);// Change class and recolor points accordingly\nvar selector=\"#\"+id;d3.selectAll(selector).attr(\"class\",function(){var CURRENT_CLASS=d3.select(this).attr(\"class\");if(CURRENT_CLASS.includes(\"brushed\")){return CURRENT_CLASS;}else{return\"brushed\";}}).attr(\"fill\",function(d,i,elements){var color=database[id].originalColor;if(d3.select(elements[i]).attr(\"class\").includes(\"brushed\")){if(Object.entries(colorMap).length>0){color=\"black\";//color = \"red\"\n}else{color=\"orange\";}}return color;});}else categorizedPoints.push([idInfo.label,0]);};for(var _i=0,_Object$entries=Object.entries(database);_i<_Object$entries.length;_i++){var _ret=_loop();if(_ret===\"continue\")continue;}console.log(brushedPoints);return{brushedPoints:brushedPoints,categorizedPoints:categorizedPoints,selectedLabels:selectedLabels};}// Reset projection to original state\nfunction reset(){// Remove word clouds\nd3.select(\"#positive-cloud\").remove();d3.select(\"#negative-cloud\").remove();// Re-color points\nd3.selectAll(\"circle\").filter(function(){if(d3.select(this).attr(\"class\").includes(\"matches-substring\")){return false;}else{return true;}}).attr(\"class\",\"non-brushed\").attr(\"fill\",function(){var color=database[d3.select(this).attr(\"id\")]===undefined?\"black\":database[d3.select(this).attr(\"id\")].originalColor;return color;}).attr(\"r\",globalDotSize).attr(\"opacity\",globalOpacity);// Remove point label\nd3.selectAll(\".pointLabel\").remove();// Reset lasso\nd3.selectAll(\"#lasso\").attr(\"d\",\"\");}// Make random id strings\nfunction makeid(length){var result=\"\";var characters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";var charactersLength=characters.length;for(var i=0;i<length;i++){result+=characters.charAt(Math.floor(Math.random()*charactersLength));}return result;}function changeOpacity(opacity){d3.selectAll(\"circle\").attr(\"opacity\",opacity);globalOpacity=opacity;}function changeDotSize(dotSize){d3.selectAll(\"circle\").attr(\"r\",dotSize);globalDotSize=dotSize;}function highlightLabel(event){// Reset previously highlighted labels\nd3.selectAll(\".brushed\").attr(\"fill\",\"orange\").attr(\"opacity\",globalOpacity).attr(\"class\",\"brushed\").attr(\"r\",globalDotSize);var ids=event.target.id.split(\" \");// Highlight labels corresponding to ids\nvar _iterator3=_createForOfIteratorHelper(ids),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var id=_step3.value;d3.select(\"#\"+id).attr(\"fill\",\"green\").attr(\"class\",\"brushed selected\").attr(\"opacity\",globalOpacity+0.5).attr(\"r\",globalDotSize+2);}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}}// Draws tool tip for specific point on hover\nfunction drawToolTip(id,width){var pointInfo=database[id];var svg=d3.select(\"#containerSVG\");var toolTipWidth=340;var rectPadding=1;var hasCategory=database[id].originalColor!==\"black\"?true:false;// If dot is on right side of screen, flip tooltip\nvar leftflip=false;if(pointInfo.cx>width/2){leftflip=true;}// If dot is too high up, flip tooltip\nvar bottomflip=false;// Draw tooltip of label text with rectangular border\n// g element to hold the rect and text\nvar pointLabelContainer=svg.append(\"g\").attr(\"transform\",\"translate(\"+pointInfo.cx+\",\"+pointInfo.cy+\")\").attr(\"class\",\"pointLabel\").attr(\"id\",id+\"label\");// Text\nvar toytext=pointLabelContainer.append(\"text\").text(\"item: \"+pointInfo.label).attr(\"x\",function(){if(!leftflip){return rectPadding+\"em\";}else{return-toolTipWidth;}}).attr(\"y\",-60+rectPadding+12).attr(\"id\",\"toyText\");var lines=wrap(toytext,toolTipWidth-2*rectPadding);d3.select(\"#toyText\").remove();// Rect\nvar toolTipHeight=1.1*(lines+1)+1;// Flips tooltip if it's too close to the top\nif(pointInfo.cy<100){bottomflip=true;}if(hasCategory){toolTipHeight=1.1*(lines+4)+1;}pointLabelContainer.append(\"rect\").attr(\"x\",function(){if(!leftflip){return 10;}else{return-(toolTipWidth+10);}}).attr(\"y\",function(){if(!bottomflip){return-3+\"em\";}else{return 0;}}).attr(\"width\",toolTipWidth).attr(\"height\",toolTipHeight+\"em\").attr(\"fill\",\"white\").attr(\"stroke\",\"black\").attr(\"stroke-width\",\"1px\").style(\"z-index\",\"1\");// Change fill/size of the corresponding point\nd3.select(\"#\"+id).attr(\"fill\",\"green\").attr(\"opacity\",globalOpacity+0.5).attr(\"r\",globalDotSize+2);pointLabelContainer.append(\"text\").text(\"item: \"+pointInfo.label).attr(\"x\",function(){if(!leftflip){return rectPadding+\"em\";}else{return-toolTipWidth;}}).attr(\"y\",function(){if(!bottomflip){return-3+rectPadding+0.3+\"em\";}else{return rectPadding+0.3+\"em\";}}).style(\"z-index\",\"10\").attr(\"font-family\",\"Arial\").attr(\"fill\",\"black\").attr(\"stroke-width\",\"1px\").style(\"z-index\",\"10\").attr(\"vector-effect\",\"non-scaling-stroke\").call(wrap,toolTipWidth-2*10);// Add category information if has category\nif(hasCategory){pointLabelContainer.append(\"text\").text(\"category: \"+pointInfo.category).attr(\"x\",function(){if(!leftflip){return rectPadding+\"em\";}else{return-toolTipWidth;}}).attr(\"y\",function(){if(!bottomflip){return-3+toolTipHeight-1.1+\"em\";}else{return toolTipHeight-1.1+\"em\";}}).style(\"z-index\",\"10\").attr(\"font-family\",\"Arial\").attr(\"fill\",\"black\").attr(\"stroke-width\",\"1px\").style(\"z-index\",\"10\").attr(\"vector-effect\",\"non-scaling-stroke\");}}// Function for wrapping svg text elements\nfunction wrap(text,width){var lines=0;text.each(function(){var text=d3.select(this),words=text.text().split(/\\s+/).reverse(),word,line=[],lineNumber=0,lineHeight=1.1,// ems\nx=text.attr(\"x\"),y=text.attr(\"y\"),dy=0,//parseFloat(text.attr(\"dy\")),\ntspan=text.text(null).append(\"tspan\").attr(\"x\",x).attr(\"y\",y).attr(\"dy\",dy+\"em\");while(word=words.pop()){line.push(word);tspan.text(line.join(\" \"));if(tspan.node().getComputedTextLength()>width){line.pop();tspan.text(line.join(\" \"));line=[word];tspan=text.append(\"tspan\").attr(\"x\",x).attr(\"y\",y).attr(\"dy\",++lineNumber*lineHeight+dy+\"em\").text(word);}}lines=lineNumber;});return lines;}// Uses the ID of a point to remove the corresponding tooltip on mouseOut\nfunction eraseToolTip(id){var POINT_CLASS_NAME=d3.select(\"#\"+id).attr(\"class\");// Remove the tooltip\nd3.select(\"#\"+id+\"label\").remove();// Reset points to appropriate fill, opacity, and radius based on state\nd3.select(\"#\"+id).attr(\"fill\",function(){switch(POINT_CLASS_NAME){case\"brushed\":return\"orange\";case\"brushed selected\":return\"green\";case\"matches-substring brushed\":return\"orange\";default:return database[id].originalColor;//////////******fix if the state is that it is currently selected, then stay black */\n// return \"red\"\n}}).attr(\"opacity\",function(){switch(POINT_CLASS_NAME){case\"brushed\":return globalOpacity;case\"brushed selected\":return globalOpacity+0.5;default:return globalOpacity;}}).attr(\"r\",function(){switch(POINT_CLASS_NAME){case\"brushed\":return globalDotSize;case\"brushed selected\":return globalDotSize+2;default:return globalDotSize;}});}// Gets centroid of set of points\nfunction getCentroid(points){var first=points[0],last=points[points.length-1];if(first.x!==last.x||first.y!==last.y)points.push(first);var twicearea=0,x=0,y=0,nPoints=points.length,p1,p2,f;for(var i=0,j=nPoints-1;i<nPoints;j=i++){p1=points[i];p2=points[j];f=p1.x*p2.y-p2.x*p1.y;twicearea+=f;x+=(p1.x+p2.x)*f;y+=(p1.y+p2.y)*f;}f=twicearea*3;return{x:x/f,y:y/f};}function findMatchingPoints(substring){substring=substring.toLowerCase();// Changes opacity of dots to look like something's loading\n// d3.selectAll(\"circle\").attr(\"opacity\", 0.1);\n// TODO: make color black for colored plot\n// Highlight points whose labels match the substring\nvar COLORFUL=Object.entries(colorMap).length>0?true:false;d3.selectAll(\"circle\").filter(function(d){if(d[2]!==undefined){var lowerCaseLabel=d[2].toLowerCase();return lowerCaseLabel.includes(substring);}else{return false;}}).attr(\"fill\",function(d){if(COLORFUL){return\"black\";}else{return\"orange\";}}).attr(\"class\",\"matches-substring brushed\").attr(\"opacity\",globalOpacity);}function clearSelectedMatchingPoints(){d3.selectAll(\".matches-substring\").attr(\"class\",\"brushed\");}export{drawProjection,checkPoints,reset,clearSVG,changeOpacity,changeDotSize,highlightLabel,drawToolTip,eraseToolTip,getCentroid,toggleDotDisplay,findMatchingPoints,clearSelectedMatchingPoints};","map":{"version":3,"names":["d3","database","colorMap","globalOpacity","globalDotSize","clearSVG","svg","select","selectAll","remove","attr","drawProjection","width","height","uploadedData","data","JSON","parse","stringify","MARGIN","top","right","bottom","left","SVG_X","SVG_Y","PLOT_X","PLOT_Y","x","scaleLinear","range","y","length","makeColorMap","d_extent_x","extent","d","d_extent_y","domain","row","push","makeid","append","enter","id","label","centerX","cx","centerY","cy","assignColor","originalColor","uniqueCategories","Set","item","has","add","categoriesArray","Array","from","i","COLORS","category","toggleDotDisplay","checked","color","filter","checkPoints","path","document","getElementById","getElementsByTagName","brushedPoints","categorizedPoints","selectedLabels","idInfo","point","createSVGPoint","isPointInFill","selector","CURRENT_CLASS","includes","elements","Object","entries","console","log","reset","undefined","result","characters","charactersLength","charAt","Math","floor","random","changeOpacity","opacity","changeDotSize","dotSize","highlightLabel","event","ids","target","split","drawToolTip","pointInfo","toolTipWidth","rectPadding","hasCategory","leftflip","bottomflip","pointLabelContainer","toytext","text","lines","wrap","toolTipHeight","style","call","each","words","reverse","word","line","lineNumber","lineHeight","dy","tspan","pop","join","node","getComputedTextLength","eraseToolTip","POINT_CLASS_NAME","getCentroid","points","first","last","twicearea","nPoints","p1","p2","f","j","findMatchingPoints","substring","toLowerCase","COLORFUL","lowerCaseLabel","clearSelectedMatchingPoints"],"sources":["/Users/Shivam/Library/CloudStorage/GoogleDrive-sraval@g.harvard.edu/My Drive/Github/Cluster-Research-new/frontend/src/d3-rendering/projectionManipulationFunctions.js"],"sourcesContent":["import * as d3 from \"d3\";\n\n// Storing state location data for quicker access\n/*\n  Schema:\n  database = {\n    id: {\n      cx: float\n      cy: float\n      label: string\n      originalColor: color\n    }\n  }\n  */\n\n// Global variables\nlet database = {}; // Database of projected points\nlet colorMap = {}; // Map of label --> color\nlet globalOpacity = 0.5; // Default opacity\nlet globalDotSize = 2; // Default dot size\n\n// Clears SVG in the center panel when new data is uploaded\nfunction clearSVG() {\n  var svg = d3.select(\"#containerSVG\");\n  svg.selectAll(\"circle\").remove(); // Removes plotted points\n  svg.selectAll(\"#lasso\").attr(\"d\", \"\"); // Resets lasso\n}\n\n// Function to draw projection, called once at render time and when new data is uploaded\n/*\n  Schema:\n  width = float\n  height = float\n  uploadedData = [x, y, label, color(if color column selected)]\n*/\nfunction drawProjection(width, height, uploadedData) {\n  let data = JSON.parse(JSON.stringify(uploadedData));\n  // Location var\n  const MARGIN = { top: 20, right: 0, bottom: 50, left: 85 },\n    SVG_X = width,\n    SVG_Y = height,\n    PLOT_X = SVG_X - MARGIN.right - MARGIN.left,\n    PLOT_Y = SVG_Y - MARGIN.top - MARGIN.bottom;\n\n  var x = d3.scaleLinear().range([MARGIN.left, PLOT_X]),\n    y = d3.scaleLinear().range([PLOT_Y, MARGIN.top]);\n\n  // SVG\n  var svg = d3.select(\"#containerSVG\");\n\n  // Re-setting database and colorMap and using uploaded data to draw when data has been loaded\n  database = {};\n  colorMap = {};\n\n  if (data[0].length === 4) {\n    makeColorMap(data);\n  }\n\n  var d_extent_x = d3.extent(data, (d) => +d[0]),\n    d_extent_y = d3.extent(data, (d) => +d[1]);\n\n  // Draw axes\n  x.domain(d_extent_x);\n  y.domain(d_extent_y);\n\n  // Generate IDs for points\n  for (let row of data) {\n    row.push(makeid(10));\n  }\n\n  // Draw circles\n  svg\n    .append(\"g\")\n    .selectAll(\"circle\")\n    .data(data)\n    .enter()\n    .append(\"circle\")\n    .attr(\"r\", globalDotSize)\n    .attr(\"opacity\", globalOpacity)\n    .attr(\"id\", (d) => {\n      let id = d[d.length - 1];\n      database[id] = { label: d[2] };\n      return id;\n    })\n    .attr(\"cx\", (d) => {\n      let centerX = x(+d[0]);\n      database[d[d.length - 1]].cx = centerX;\n      return centerX;\n    })\n    .attr(\"cy\", (d) => {\n      let centerY = y(+d[1]);\n      database[d[d.length - 1]].cy = centerY;\n      return centerY;\n    })\n    .attr(\"fill\", (d) => {\n      if (d.length === 5) {\n        return assignColor(d[3], d[4]);\n      } else {\n        database[d[d.length - 1]].originalColor = \"black\";\n        return \"black\";\n      }\n    })\n    .attr(\"class\", \"non-brushed\");\n\n  svg.append(\"g\");\n  return colorMap;\n}\n\nfunction makeColorMap(data) {\n  let uniqueCategories = new Set();\n  for (let item of data) {\n    if (uniqueCategories.has(item[3])) {\n      continue;\n    } else {\n      uniqueCategories.add(item[3]);\n    }\n  }\n\n  let categoriesArray = Array.from(uniqueCategories);\n  for (let i = 0; i < categoriesArray.length; i++) {\n    colorMap[categoriesArray[i]] = COLORS[i % 11];\n  }\n}\n\nconst COLORS = ['#e6194B', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4', '#42d4f4', '#f032e6', '#bfef45', '#fabed4', '#469990', '#dcbeff', '#9A6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#a9a9a9', '#ffffff', '#000000'\n];\n\nfunction assignColor(category, id) {\n  database[id].category = category;\n  database[id].originalColor = colorMap[category];\n  return colorMap[category];\n}\n\n// Displays dots based on if the checkbox corresponding to their color is checked\nfunction toggleDotDisplay(checked, color) {\n  d3.selectAll(\"circle\")\n    .filter(function () {\n      if (database[d3.select(this).attr(\"id\")]) {\n        return database[d3.select(this).attr(\"id\")].originalColor === color;\n      } else {\n        return false;\n      }\n    })\n    .attr(\"visibility\", function () {\n      if (checked) {\n        return \"visible\";\n      } else {\n        return \"hidden\";\n      }\n    })\n    .attr(\"opacity\", function () {\n      if (checked) {\n        return \"1\";\n      } else {\n        return \"0\";\n      }\n    });\n}\n\n// Check if points are within path on mouseup\nfunction checkPoints() {\n  var path = document.getElementById(\"lasso\");\n  let svg = document.getElementsByTagName(\"svg\")[0];\n  let brushedPoints = [];\n  let categorizedPoints = [];\n  let selectedLabels = [];\n  // d3.polygonContains(lassoPolygon, [x, y]);\n  for (let [id, idInfo] of Object.entries(database)) {\n    // Ignores point if it's not currently displayed\n    if (d3.select(\"#\" + id).attr(\"visibility\") === \"hidden\") {\n      continue;\n    }\n    const point = svg.createSVGPoint();\n\n    point.x = idInfo.cx;\n    point.y = idInfo.cy;\n    // Check if point is in path\n    if (path.isPointInFill(point)) {\n      idInfo.id = id;\n      brushedPoints.push(idInfo);\n      categorizedPoints.push([idInfo.label, 1]);\n      selectedLabels.push(idInfo.label);\n      // Change class and recolor points accordingly\n      let selector = \"#\" + id;\n      d3.selectAll(selector)\n        .attr(\"class\", function () {\n          const CURRENT_CLASS = d3.select(this).attr(\"class\");\n          if (CURRENT_CLASS.includes(\"brushed\")) {\n            return CURRENT_CLASS;\n          } else {\n            return \"brushed\";\n          }\n        })\n        .attr(\"fill\", (d, i, elements) => {\n          let color = database[id].originalColor;\n          if (d3.select(elements[i]).attr(\"class\").includes(\"brushed\")) {\n            if (Object.entries(colorMap).length > 0) {\n              color = \"black\"; \n              //color = \"red\"\n            } else {\n              color = \"orange\";\n            }\n          }\n\n          return color;\n        });\n    } else categorizedPoints.push([idInfo.label, 0]);\n  }\n  console.log(brushedPoints)\n  return {\n    brushedPoints: brushedPoints,\n    categorizedPoints: categorizedPoints,\n    selectedLabels: selectedLabels,\n  };\n}\n\n// Reset projection to original state\nfunction reset() {\n  // Remove word clouds\n  d3.select(\"#positive-cloud\").remove();\n  d3.select(\"#negative-cloud\").remove();\n\n  // Re-color points\n  d3.selectAll(\"circle\")\n    .filter(function () {\n      if (d3.select(this).attr(\"class\").includes(\"matches-substring\")) {\n        return false;\n      } else {\n        return true;\n      }\n    })\n    .attr(\"class\", \"non-brushed\")\n    .attr(\"fill\", function () {\n      let color =\n        database[d3.select(this).attr(\"id\")] === undefined\n          ? \"black\"\n          : database[d3.select(this).attr(\"id\")].originalColor;\n      return color;\n    })\n    .attr(\"r\", globalDotSize)\n    .attr(\"opacity\", globalOpacity);\n\n  // Remove point label\n  d3.selectAll(\".pointLabel\").remove();\n\n  // Reset lasso\n  d3.selectAll(\"#lasso\").attr(\"d\", \"\");\n}\n\n// Make random id strings\nfunction makeid(length) {\n  var result = \"\";\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nfunction changeOpacity(opacity) {\n  d3.selectAll(\"circle\").attr(\"opacity\", opacity);\n  globalOpacity = opacity;\n}\nfunction changeDotSize(dotSize) {\n  d3.selectAll(\"circle\").attr(\"r\", dotSize);\n  globalDotSize = dotSize;\n}\n\nfunction highlightLabel(event) {\n  // Reset previously highlighted labels\n  d3.selectAll(\".brushed\")\n    .attr(\"fill\", \"orange\")\n    .attr(\"opacity\", globalOpacity)\n    .attr(\"class\", \"brushed\")\n    .attr(\"r\", globalDotSize);\n  let ids = event.target.id.split(\" \");\n\n  // Highlight labels corresponding to ids\n  for (let id of ids) {\n    d3.select(\"#\" + id)\n      .attr(\"fill\", \"green\")\n      .attr(\"class\", \"brushed selected\")\n      .attr(\"opacity\", globalOpacity + 0.5)\n      .attr(\"r\", globalDotSize + 2);\n  }\n}\n\n// Draws tool tip for specific point on hover\nfunction drawToolTip(id, width) {\n  let pointInfo = database[id];\n  let svg = d3.select(\"#containerSVG\");\n  let toolTipWidth = 340;\n  let rectPadding = 1;\n  let hasCategory = database[id].originalColor !== \"black\" ? true : false;\n\n  // If dot is on right side of screen, flip tooltip\n  let leftflip = false;\n  if (pointInfo.cx > width / 2) {\n    leftflip = true;\n  }\n\n  // If dot is too high up, flip tooltip\n  let bottomflip = false;\n\n  // Draw tooltip of label text with rectangular border\n  // g element to hold the rect and text\n  var pointLabelContainer = svg\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + pointInfo.cx + \",\" + pointInfo.cy + \")\")\n    .attr(\"class\", \"pointLabel\")\n    .attr(\"id\", id + \"label\");\n\n  // Text\n  let toytext = pointLabelContainer\n    .append(\"text\")\n    .text(\"item: \" + pointInfo.label)\n    .attr(\"x\", () => {\n      if (!leftflip) {\n        return rectPadding + \"em\";\n      } else {\n        return -toolTipWidth;\n      }\n    })\n    .attr(\"y\", -60 + rectPadding + 12)\n    .attr(\"id\", \"toyText\");\n\n  let lines = wrap(toytext, toolTipWidth - 2 * rectPadding);\n\n  d3.select(\"#toyText\").remove();\n\n  // Rect\n  let toolTipHeight = 1.1 * (lines + 1) + 1;\n\n  // Flips tooltip if it's too close to the top\n  if (pointInfo.cy < 100) {\n    bottomflip = true;\n  }\n\n  if (hasCategory) {\n    toolTipHeight = 1.1 * (lines + 4) + 1;\n  }\n\n  pointLabelContainer\n    .append(\"rect\")\n    .attr(\"x\", () => {\n      if (!leftflip) {\n        return 10;\n      } else {\n        return -(toolTipWidth + 10);\n      }\n    })\n    .attr(\"y\", () => {\n      if (!bottomflip) {\n        return -3 + \"em\";\n      } else {\n        return 0;\n      }\n    })\n    .attr(\"width\", toolTipWidth)\n    .attr(\"height\", toolTipHeight + \"em\")\n    .attr(\"fill\", \"white\")\n    .attr(\"stroke\", \"black\")\n    .attr(\"stroke-width\", \"1px\")\n    .style(\"z-index\", \"1\");\n\n  // Change fill/size of the corresponding point\n  d3.select(\"#\" + id)\n    .attr(\"fill\", \"green\")\n    .attr(\"opacity\", globalOpacity + 0.5)\n    .attr(\"r\", globalDotSize + 2);\n\n  pointLabelContainer\n    .append(\"text\")\n    .text(\"item: \" + pointInfo.label)\n    .attr(\"x\", () => {\n      if (!leftflip) {\n        return rectPadding + \"em\";\n      } else {\n        return -toolTipWidth;\n      }\n    })\n    .attr(\"y\", () => {\n      if (!bottomflip) {\n        return -3 + rectPadding + 0.3 + \"em\";\n      } else {\n        return rectPadding + 0.3 + \"em\";\n      }\n    })\n    .style(\"z-index\", \"10\")\n    .attr(\"font-family\", \"Arial\")\n    .attr(\"fill\", \"black\")\n    .attr(\"stroke-width\", \"1px\")\n    .style(\"z-index\", \"10\")\n    .attr(\"vector-effect\", \"non-scaling-stroke\")\n    .call(wrap, toolTipWidth - 2 * 10);\n\n  // Add category information if has category\n  if (hasCategory) {\n    pointLabelContainer\n      .append(\"text\")\n      .text(\"category: \" + pointInfo.category)\n      .attr(\"x\", () => {\n        if (!leftflip) {\n          return rectPadding + \"em\";\n        } else {\n          return -toolTipWidth;\n        }\n      })\n      .attr(\"y\", () => {\n        if (!bottomflip) {\n          return -3 + toolTipHeight - 1.1 + \"em\";\n        } else {\n          return toolTipHeight - 1.1 + \"em\";\n        }\n      })\n      .style(\"z-index\", \"10\")\n      .attr(\"font-family\", \"Arial\")\n      .attr(\"fill\", \"black\")\n      .attr(\"stroke-width\", \"1px\")\n      .style(\"z-index\", \"10\")\n      .attr(\"vector-effect\", \"non-scaling-stroke\");\n  }\n}\n\n// Function for wrapping svg text elements\nfunction wrap(text, width) {\n  let lines = 0;\n  text.each(function () {\n    var text = d3.select(this),\n      words = text.text().split(/\\s+/).reverse(),\n      word,\n      line = [],\n      lineNumber = 0,\n      lineHeight = 1.1, // ems\n      x = text.attr(\"x\"),\n      y = text.attr(\"y\"),\n      dy = 0, //parseFloat(text.attr(\"dy\")),\n      tspan = text\n        .text(null)\n        .append(\"tspan\")\n        .attr(\"x\", x)\n        .attr(\"y\", y)\n        .attr(\"dy\", dy + \"em\");\n    while ((word = words.pop())) {\n      line.push(word);\n      tspan.text(line.join(\" \"));\n      if (tspan.node().getComputedTextLength() > width) {\n        line.pop();\n        tspan.text(line.join(\" \"));\n        line = [word];\n        tspan = text\n          .append(\"tspan\")\n          .attr(\"x\", x)\n          .attr(\"y\", y)\n          .attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\")\n          .text(word);\n      }\n    }\n    lines = lineNumber;\n  });\n\n  return lines;\n}\n\n// Uses the ID of a point to remove the corresponding tooltip on mouseOut\nfunction eraseToolTip(id) {\n  const POINT_CLASS_NAME = d3.select(\"#\" + id).attr(\"class\");\n\n  // Remove the tooltip\n  d3.select(\"#\" + id + \"label\").remove();\n\n  // Reset points to appropriate fill, opacity, and radius based on state\n  d3.select(\"#\" + id)\n    .attr(\"fill\", () => {\n      switch (POINT_CLASS_NAME) {\n        case \"brushed\":\n          return \"orange\";\n        case \"brushed selected\":\n          return \"green\";\n        case \"matches-substring brushed\":\n          return \"orange\";\n        default:\n          return database[id].originalColor; //////////******fix if the state is that it is currently selected, then stay black */\n          // return \"red\"\n      }\n    })\n    .attr(\"opacity\", () => {\n      switch (POINT_CLASS_NAME) {\n        case \"brushed\":\n          return globalOpacity;\n        case \"brushed selected\":\n          return globalOpacity + 0.5;\n        default:\n          return globalOpacity;\n      }\n    })\n    .attr(\"r\", () => {\n      switch (POINT_CLASS_NAME) {\n        case \"brushed\":\n          return globalDotSize;\n        case \"brushed selected\":\n          return globalDotSize + 2;\n        default:\n          return globalDotSize;\n      }\n    });\n}\n\n// Gets centroid of set of points\nfunction getCentroid(points) {\n  var first = points[0],\n    last = points[points.length - 1];\n  if (first.x !== last.x || first.y !== last.y) points.push(first);\n  var twicearea = 0,\n    x = 0,\n    y = 0,\n    nPoints = points.length,\n    p1,\n    p2,\n    f;\n  for (var i = 0, j = nPoints - 1; i < nPoints; j = i++) {\n    p1 = points[i];\n    p2 = points[j];\n    f = p1.x * p2.y - p2.x * p1.y;\n    twicearea += f;\n    x += (p1.x + p2.x) * f;\n    y += (p1.y + p2.y) * f;\n  }\n  f = twicearea * 3;\n  return { x: x / f, y: y / f };\n}\n\nfunction findMatchingPoints(substring) {\n  substring = substring.toLowerCase();\n  // Changes opacity of dots to look like something's loading\n  // d3.selectAll(\"circle\").attr(\"opacity\", 0.1);\n\n  // TODO: make color black for colored plot\n  // Highlight points whose labels match the substring\n  const COLORFUL = Object.entries(colorMap).length > 0 ? true : false;\n\n  d3.selectAll(\"circle\")\n    .filter(function (d) {\n      if (d[2] !== undefined) {\n        let lowerCaseLabel = d[2].toLowerCase();\n        return lowerCaseLabel.includes(substring);\n      } else {\n        return false;\n      }\n    })\n    .attr(\"fill\", function (d) {\n      if (COLORFUL) {\n        return \"black\";\n      } else {\n        return \"orange\";\n      }\n    })\n    .attr(\"class\", \"matches-substring brushed\")\n    .attr(\"opacity\", globalOpacity);\n}\n\nfunction clearSelectedMatchingPoints() {\n  d3.selectAll(\".matches-substring\").attr(\"class\", \"brushed\");\n}\n\nexport {\n  drawProjection,\n  checkPoints,\n  reset,\n  clearSVG,\n  changeOpacity,\n  changeDotSize,\n  highlightLabel,\n  drawToolTip,\n  eraseToolTip,\n  getCentroid,\n  toggleDotDisplay,\n  findMatchingPoints,\n  clearSelectedMatchingPoints,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}